{"version":3,"sources":["assets/tmovie.png","components/header/Header.jsx","assets/footer-bg.jpg","components/footer/Footer.jsx","components/button/Button.jsx","api/apiConfig.js","api/axiosClient.js","api/tmdbApi.js","components/modal/Modal.jsx","components/Slide/Slide.jsx","components/movie-card/MovieCard.jsx","components/movie-list/MovieList.jsx","pages/Home.jsx","components/page-header/PageHeader.jsx","components/input/Input.jsx","components/movie-grid/MovieGrid.jsx","pages/Catalog.jsx","pages/detail/CastList.jsx","pages/detail/VideoList.jsx","pages/detail/Detail.jsx","Config/Routes.jsx","App.js","index.js"],"names":["headerNav","display","path","Header","pathname","useLocation","headerRef","useRef","active","findIndex","e","useEffect","shrinkHeader","document","body","scrollTop","documentElement","current","classList","add","remove","window","addEventListener","removeEventListener","ref","className","src","logo","alt","to","map","i","Footer","style","backgroundImage","bg","Button","props","onClick","children","OutlineButton","apiConfig","baseUrl","apiKey","originalImage","imgPath","w500Image","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","api_key","interceptors","request","use","a","config","response","data","error","category","movie","tv","movieType","upcoming","popular","top_rated","tvType","on_the_air","tmdbApi","getMoviesList","type","url","get","getTvList","getVideos","cate","id","search","detail","credits","similar","ModalContent","contentRef","parentElement","onClose","Modal","useState","setActive","SlideItem","history","useHistory","item","background","backdrop_path","poster_path","setModalActive","modal","querySelector","videos","results","length","videoSrc","key","setAttribute","innerHTML","toggle","title","overview","push","TrailerModal","iframeRef","width","height","Slide","SwiperCore","Autoplay","movieItems","setMovieItems","getMovies","page","slice","console","log","modules","grabCursor","spaceBetween","slidesPerView","isActive","index","MovieCard","link","name","MovieList","items","setItems","getList","Home","PageHeader","Input","placeholder","value","onChange","MovieSearch","keyword","setKeyword","goToSearch","useCallback","trim","enterEvent","preventDefault","keyCode","target","MovieGrid","setPage","totalPage","setTotalPage","useParams","undefined","query","total_pages","loadMore","Catalog","CastList","casts","setCasts","getCredits","res","cast","profile_path","Video","offsetWidth","VideoList","setVideos","Detail","setItem","getDetaiil","scrollTo","genres","genre","Routes","component","exact","App","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a8c21a2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmovie.67797e94.png\";","import React, { useEffect } from \"react\";\r\nimport './header.scss';\r\nimport { useRef } from \"react\";\r\n\r\nimport { Link , useLocation } from 'react-router-dom'\r\nimport logo from '../../assets/tmovie.png'\r\nconst headerNav = [\r\n    {\r\n        display : 'Home',\r\n        path: '/'\r\n    },\r\n    {\r\n        display : 'Movies',\r\n        path: '/movie'\r\n    },\r\n    {\r\n        display : 'Tv Series',\r\n        path: '/tv'\r\n    }\r\n]\r\nconst Header = () => {\r\n\r\n    //get location browser\r\n    const  { pathname } = useLocation();\r\n    const headerRef = useRef(null);\r\n    const active = headerNav.findIndex(e => e.path === pathname )\r\n    useEffect (()=> {\r\n        const shrinkHeader = () => {\r\n            if(document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {\r\n                //add class shrink to header when user scroll page > 100\r\n                headerRef.current.classList.add('shrink');\r\n            }\r\n            else {\r\n                headerRef.current.classList.remove('shrink');\r\n            }\r\n        }\r\n        window.addEventListener('scroll',shrinkHeader)\r\n        return () => {\r\n            window.removeEventListener('scroll',shrinkHeader)\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div ref={headerRef} className=\"header\">\r\n            <div className=\"header__wrap container\">\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt=\"\" />\r\n                    <Link to=\"/\">tMovies</Link>\r\n                </div>\r\n                <ul className=\"header__nav\">\r\n                    {\r\n                        headerNav.map((e, i) => (\r\n                            <li key={i} className={`${i === active ? 'active' : ''}`}>\r\n                                \r\n                                <Link to={e.path}>\r\n                                    {e.display}\r\n                                </Link>\r\n                            </li>\r\n                            \r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/footer-bg.67e95f05.jpg\";","import React from \"react\";\r\nimport './footer.scss';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport bg from '../../assets/footer-bg.jpg';\r\n\r\nimport logo from '../../assets/tmovie.png';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className = \"footer\" style = {{backgroundImage: `url(${bg})`}}>\r\n            <div className=\"footer__content container\">\r\n                <div className=\"footer__content__logo\">\r\n                    <div className = \"logo\">\r\n                        <img src = {logo} alt = \"\"/>\r\n                        <Link to = '/'>tMovies</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer__content__menus\">\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to = \"/\">Home</Link>\r\n                        <Link to = \"/\">Contact us</Link>\r\n                        <Link to = \"/\">Term of services</Link>\r\n                        <Link to = \"/\">About us</Link>\r\n                    </div>\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to = \"/\">Live</Link>\r\n                        <Link to = \"/\">FAQ</Link>\r\n                        <Link to = \"/\">Premium</Link>\r\n                        <Link to = \"/\">Pravacy policy</Link>\r\n                    </div>\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to = \"/\">You must watch</Link>\r\n                        <Link to = \"/\">Recent release</Link>\r\n                        <Link to = \"/\">Top IMDB</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './button.scss';\r\n\r\nconst Button = props => {\r\n    return (\r\n        <button\r\n            className={`btn ${props.className}`}\r\n            onClick={props.onClick ? () => props.onClick() : null}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport const OutlineButton = props => {\r\n    return (\r\n        <Button\r\n            className={`btn-outline ${props.className}`}\r\n            onClick={props.onClick ? () => props.onClick() : null}\r\n        >\r\n            {props.children}\r\n        </Button>\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button;\r\n","const apiConfig =  {\r\n    baseUrl : 'https://api.themoviedb.org/3/',\r\n    apiKey : 'e12a3aa420d34aac8462adeeb6092fb6',\r\n    originalImage : (imgPath) => `https://image.tmdb.org/t/p/original/${imgPath}`,\r\n    w500Image : (imgPath) => `https://image.tmdb.org/t/p/w500/${imgPath}`,\r\n    \r\n}\r\nexport default apiConfig;","// import axios from 'axios';\r\n// import queryString from 'query-string';\r\n// import apiConfig from './apiConfig';\r\n\r\n// //learn axios để hiểu đoạn này\r\n// const axiosClient = axios.create({\r\n//     baseURL : apiConfig.baseUrl,\r\n//     headers : {\r\n//         'Content-Type' : 'application/json'\r\n//     },\r\n//     paramsSerializer : params => queryString.stringify({...params,api_key : apiConfig,apiKey})\r\n// });\r\n// axiosClient.interceptors.response.use(async(config) => config);\r\n// axiosClient.interceptors.response.use((response) => {\r\n//     if(response && response.data){\r\n//         return response.data\r\n//     }\r\n//     return response;\r\n// }, (error) => {\r\n//     throw error;\r\n// })\r\n// export default axiosClient;\r\n\r\n\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nimport apiConfig from './apiConfig';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: apiConfig.baseUrl,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    paramsSerializer: params => queryString.stringify({...params, api_key: apiConfig.apiKey})\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => config);\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n\r\n    return response;\r\n}, (error) => {\r\n    throw error;\r\n});\r\n\r\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\r\n\r\nexport const category = {\r\n    movie: 'movie',\r\n    tv: 'tv'\r\n}\r\n\r\nexport const movieType = {\r\n    upcoming: 'upcoming',\r\n    popular: 'popular',\r\n    top_rated: 'top_rated'\r\n}\r\n\r\nexport const tvType = {\r\n    popular: 'popular',\r\n    top_rated: 'top_rated',\r\n    on_the_air: 'on_the_air'\r\n}\r\n\r\n\r\n//create an object contains method get data from API  \r\nconst tmdbApi = {\r\n    getMoviesList: (type, params) => {\r\n        const url = 'movie/' + movieType[type];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    getTvList: (type, params) => {\r\n        const url = 'tv/' + tvType[type];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    getVideos: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/videos';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n    search: (cate, params) => {\r\n        const url = 'search/' + category[cate];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    detail: (cate, id, params) => {\r\n        const url = category[cate] + '/' + id;\r\n        return axiosClient.get(url, params);\r\n    },\r\n    credits: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/credits';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n    similar: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/similar';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n}\r\n\r\nexport default tmdbApi;","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport './modal.scss'\r\nimport { useRef } from \"react\";\r\nconst Modal = props => {\r\n\r\n\r\n    const [active,setActive] = useState(false);\r\n\r\n    \r\n    useEffect (()=> {\r\n        setActive(props.active);\r\n    }, [props.active])\r\n    return (\r\n        <div id = {props.id} className = {`modal ${active ? 'active' : ''}`}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nModal.propTypes = {\r\n    active : PropTypes.bool,\r\n    id: PropTypes.string\r\n}\r\n\r\nexport const ModalContent = props => {\r\n    const contentRef = useRef(null);\r\n    \r\n    const closeModal = () => {\r\n        contentRef.current.parentElement.classList.remove(\"active\")\r\n        if(props.onClose) props.onClose();\r\n    }\r\n\r\n    return (\r\n        <div ref = {contentRef} className = \"modal__content\">\r\n            {props.children}\r\n            <div className=\"modal__content__close\" onClick = {closeModal}>\r\n                <i className = \"bx bx-x\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nModalContent.propTypes = {\r\n    onClose : PropTypes.func\r\n}\r\nexport default Modal;","import React, { useEffect, useState , useRef, memo } from \"react\";\r\n\r\nimport tmdbApi, {category,movieType} from '../../api/tmdbApi';\r\nimport apiConfig from \"../../api/apiConfig\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport SwiperCore, { Autoplay} from 'swiper';\r\nimport {Swiper,SwiperSlide} from 'swiper/react';\r\n\r\nimport Modal, { ModalContent } from '../modal/Modal'\r\n\r\nimport Button, { OutlineButton } from '../button/Button'\r\n\r\nimport './slide.scss'\r\nconst Slide = () => {\r\n\r\n    SwiperCore.use([Autoplay]);\r\n\r\n    const [movieItems,setMovieItems] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const getMovies = async () => {\r\n            //get movie from api \r\n            const params = {page :1 }\r\n            try {\r\n                const response = await tmdbApi.getMoviesList(movieType.popular , {params})\r\n                setMovieItems(response.results.slice(0,4));\r\n            }catch {\r\n                console.log('error')\r\n            }\r\n        }\r\n        getMovies()\r\n    },[])\r\n\r\n    return (\r\n        <div className = \"slide\">\r\n            <Swiper\r\n                modules = {Autoplay}\r\n                grabCursor = {true}\r\n                spaceBetween = {0}\r\n                slidesPerView = {1}  \r\n                // autoplay = {{delay:3000}}  \r\n            >\r\n                \r\n                {\r\n                    movieItems.map((item, i) => (\r\n                        <SwiperSlide key={i}>\r\n                            {({ isActive }) => (\r\n                            <SlideItem item = {item} className = {`${isActive ? 'active' : ''}`}/>\r\n                            )}\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n            {\r\n                movieItems.map((item,index) => \r\n                    <TrailerModal key = {index} item = {item}/>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SlideItem = props => {\r\n\r\n    let history = useHistory();\r\n\r\n    const item = props.item;\r\n\r\n    const background = apiConfig.originalImage(\r\n        item.backdrop_path ? item.backdrop_path : item.poster_path\r\n    );\r\n    \r\n    const setModalActive = async () => {\r\n\r\n        const modal = document.querySelector(`#modal_${item.id}`);\r\n\r\n        const videos = await tmdbApi.getVideos(category.movie,item.id);\r\n\r\n        if(videos.results.length > 0) {\r\n            const videoSrc = 'https://www.youtube.com/embed/' + videos.results[0].key;\r\n            modal.querySelector('.modal__content > iframe').setAttribute('src',videoSrc);\r\n        }\r\n        else {\r\n            modal.querySelector('.modal_content').innerHTML = \"No trailer\";\r\n        }\r\n\r\n        modal.classList.toggle('active')\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={`slide__item ${props.className}`}\r\n            style={{backgroundImage: `url(${background})`}}\r\n        >\r\n            <div className=\"slide__item__content container\">\r\n                <div className=\"slide__item__content__info\">\r\n                    <h2 className=\"title\">{item.title}</h2>\r\n                    <div className=\"overview\">{item.overview}</div>\r\n                    <div className=\"btns\">\r\n                        <Button onClick={() => history.push('/movie/' + item.id)}>\r\n                            Watch now\r\n                        </Button>\r\n                        <OutlineButton onClick={setModalActive}>\r\n                            Watch trailer\r\n                        </OutlineButton>\r\n                    </div>\r\n                </div>\r\n                <div className=\"slide__item__content__poster\">\r\n                    <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst TrailerModal = props => {\r\n    const item = props.item;\r\n\r\n    const iframeRef = useRef(null);\r\n\r\n    const onClose = () => iframeRef.current.setAttribute('src','');\r\n\r\n    return (\r\n        <Modal active = {false} id = {`modal_${item.id}`}>\r\n            <ModalContent onClose = {onClose}>\r\n                <iframe ref = {iframeRef} width = \"100%\" height = \"500px\" title = \"trailer\"></iframe>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Slide;","import React from \"react\";\r\nimport './movie-card.scss';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Button from \"../button/Button\";\r\n\r\nimport { category } from \"../../api/tmdbApi\";\r\nimport apiConfig from \"../../api/apiConfig\";\r\nconst MovieCard = props => {\r\n    const item = props.item;\r\n    const link = '/' + category[props.category] + '/' + item.id;\r\n\r\n    const bg = apiConfig.w500Image(item.poster_path || item.backdrop_path);\r\n\r\n    return (\r\n        <Link to = {link}>\r\n            <div className = \"movie-card\" style = {{backgroundImage : `url(${bg})`}}>\r\n                <Button>\r\n                    <i className = \"bx bx-play\"></i>    \r\n                </Button>            \r\n            </div>\r\n            <h3>{item.title || item.name}</h3>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MovieCard;","import React, {useState , useEffect} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './movie-list.scss';\r\n\r\nimport { SwiperSlide,Swiper } from \"swiper/react\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from \"../button/Button\";\r\n\r\nimport MovieCard from \"../movie-card/MovieCard\";\r\n\r\nimport tmdbApi, {category} from \"../../api/tmdbApi\";\r\nimport apiConfig from \"../../api/apiConfig\";\r\n\r\nconst MovieList = (props) => {\r\n\r\n    const [items,setItems] = useState([])\r\n\r\n    useEffect(()=> {\r\n        const getList = async () => {\r\n            let response = null;\r\n            const params = {};\r\n            if(props.type !== 'similar') {\r\n                switch (props.category) {\r\n                    case category.movie:\r\n                            response = await tmdbApi.getMoviesList(props.type, {params})\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getTvList(props.type, {params})\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                response = await tmdbApi.similar(props.category,props.id);\r\n            }\r\n            setItems(response.results);\r\n        }\r\n        getList()\r\n    },[])\r\n\r\n    return (\r\n        <div className = \"movie-list\">\r\n            <Swiper\r\n                grabCursor = {true}\r\n                spaceBetween = {10}\r\n                slidesPerView = {'auto'} \r\n            >\r\n                {\r\n                    items.map((item,index)=> (\r\n                        <SwiperSlide key = {index}>\r\n                            <MovieCard item = {item} category = {props.category}/>\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n        </div>\r\n    )\r\n}\r\nMovieList.propTypes = {\r\n    category : PropTypes.string.isRequired,\r\n    type : PropTypes.string.isRequired\r\n}\r\nexport default MovieList;","import React from \"react\";\r\nimport { OutlineButton } from \"../components/button/Button\";\r\nimport {Link}from 'react-router-dom';\r\nimport Slide from \"../components/Slide/Slide\";\r\nimport MovieList from \"../components/movie-list/MovieList\";\r\nimport { category,movieType,tvType } from \"../api/tmdbApi\";\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Slide/>\r\n            <div className=\"container\">\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Trending Movies</h2>\r\n                        <Link to = '/movie'>\r\n                            <OutlineButton className = \"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category = {category.movie} type = {movieType.popular}/>\r\n                </div>\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Top Rated Movies</h2>\r\n                        <Link to = '/movie'>\r\n                            <OutlineButton className = \"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category = {category.movie} type = {movieType.top_rated}/>\r\n                </div>\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Trending TV</h2>\r\n                        <Link to = '/tv'>\r\n                            <OutlineButton className = \"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category = {category.tv} type = {tvType.popular}/>\r\n                </div>\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Top Rated TV</h2>\r\n                        <Link to = '/tv'>\r\n                            <OutlineButton className = \"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category = {category.tv} type = {tvType.top_rated}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Home;","import React from \"react\";\r\n\r\nimport './page-header.scss';\r\n\r\nimport bg from '../../assets/footer-bg.jpg';\r\n\r\nconst PageHeader = props => {\r\n    return (\r\n        <div className = \"page-header\" style = {{backgroundImage : `url(${bg})`}}>\r\n            <h2>{props.children}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PageHeader","import React from \"react\";\r\n\r\nimport './input.scss';\r\n\r\nconst Input = props => {\r\n    return (\r\n        <input \r\n            type = {props.type}\r\n            placeholder = {props.placeholder}\r\n            value = {props.value}\r\n            onChange = {props.onChange ? (e) => props.onChange(e) : null}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Input;","import React, { useState, useEffect, useCallback  } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport './movie-grid.scss';\r\nimport MovieCard from '../movie-card/MovieCard';\r\nimport Button, { OutlineButton } from '../button/Button';\r\nimport Input from '../input/Input'\r\n\r\nimport tmdbApi, { category, movieType, tvType } from '../../api/tmdbApi';\r\n\r\nconst MovieGrid = props => {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [totalPage, setTotalPage] = useState(0);\r\n\r\n    const { keyword } = useParams();\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            if (keyword === undefined) {\r\n                const params = {};\r\n                switch(props.category) {\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getTvList(tvType.popular, {params});\r\n                }\r\n            } else {\r\n                const params = {\r\n                    query: keyword\r\n                }\r\n                response = await tmdbApi.search(props.category, {params});\r\n            }\r\n            setItems(response.results);\r\n            setTotalPage(response.total_pages);\r\n        }\r\n        getList();\r\n    }, [props.category, keyword]);\r\n\r\n    const loadMore = async () => {\r\n        let response = null;\r\n        if (keyword === undefined) {\r\n            const params = {\r\n                page: page + 1\r\n            };\r\n            switch(props.category) {\r\n                case category.movie:\r\n                    response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n                    break;\r\n                default:\r\n                    response = await tmdbApi.getTvList(tvType.popular, {params});\r\n            }\r\n        } else {\r\n            const params = {\r\n                page: page + 1,\r\n                query: keyword\r\n            }\r\n            response = await tmdbApi.search(props.category, {params});\r\n        }\r\n        setItems([...items, ...response.results]);\r\n        setPage(page + 1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"section mb-3\">\r\n                <MovieSearch category={props.category} keyword={keyword}/>\r\n            </div>\r\n            <div className=\"movie-grid\">\r\n                {\r\n                    items.map((item, i) => <MovieCard category={props.category} item={item} key={i}/>)\r\n                }\r\n            </div>\r\n            {\r\n                page < totalPage ? (\r\n                    <div className=\"movie-grid__loadmore\">\r\n                        <OutlineButton className=\"small\" onClick={loadMore}>Load more</OutlineButton>\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nconst MovieSearch = props => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [keyword, setKeyword] = useState(props.keyword ? props.keyword : '');\r\n\r\n    const goToSearch = useCallback(\r\n        () => {\r\n            if (keyword.trim().length > 0) {\r\n                history.push(`/${category[props.category]}/search/${keyword}`);\r\n            }\r\n        },\r\n        [keyword, props.category, history]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const enterEvent = (e) => {\r\n            e.preventDefault();\r\n            if (e.keyCode === 13) {\r\n                goToSearch();\r\n            }\r\n        }\r\n        document.addEventListener('keyup', enterEvent);\r\n        return () => {\r\n            document.removeEventListener('keyup', enterEvent);\r\n        };\r\n    }, [keyword, goToSearch]);\r\n\r\n    return (\r\n        <div className=\"movie-search\">\r\n            <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter keyword\"\r\n                value={keyword}\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n            />\r\n            <Button className=\"small\" onClick={goToSearch}>Search</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieGrid;\r\n","import React from \"react\";\r\n\r\nimport {useParams} from 'react-router';\r\n\r\nimport PageHeader from \"../components/page-header/PageHeader\";\r\n\r\nimport {category as cate} from '../api/tmdbApi';\r\nimport MovieGrid from \"../components/movie-grid/MovieGrid\";\r\n\r\nconst Catalog = () => {\r\n\r\n    const {category} = useParams();\r\n\r\n    console.log(category)\r\n\r\n    console.log(category)\r\n    return (\r\n        <div>\r\n            <PageHeader>\r\n                {category === cate.movie ? 'Movies' : 'TV Series'}\r\n            </PageHeader>\r\n            <div className = \"container\">\r\n                <div className = \"section mb-3\">\r\n                    <MovieGrid category = {category}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Catalog;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useParams } from \"react-router\";\r\nimport tmdbApi  from \"../../api/tmdbApi\";\r\nimport apiConfig from \"../../api/apiConfig\";\r\nconst CastList = props => {\r\n\r\n    const { category } = useParams();\r\n    const [casts,setCasts] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        const getCredits = async()=> {\r\n            const res = await tmdbApi.credits(category,props.id);\r\n            setCasts(res.cast.slice(0, 5));\r\n        }\r\n        getCredits();\r\n    },[category,props.id])\r\n\r\n    return (\r\n        <div className = \"casts\">\r\n            {\r\n                casts.map((item,index)=> (\r\n                    <div key = {index} className = \"casts__item\">\r\n                        <div className=\"casts__item__img\" style = {{backgroundImage : `url(${apiConfig.w500Image(item.profile_path)})`}}></div>\r\n                        <p className = \"casts__item__name\"> {item.name}</p>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastList;","\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { useParams } from 'react-router';\r\n\r\nimport tmdbApi from '../../api/tmdbApi';\r\n\r\nconst VideoList = props => {\r\n\r\n    const {category} = useParams();\r\n\r\n    const [videos, setVideos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getVideos = async () => {\r\n            const res = await tmdbApi.getVideos(category, props.id);\r\n            setVideos(res.results.slice(0, 5));\r\n        }\r\n        getVideos();\r\n    }, [category, props.id]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                videos.map((item, i) => (\r\n                    <Video key={i} item={item}/>\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nconst Video = props => {\r\n\r\n    const item = props.item;\r\n\r\n    const iframeRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\r\n        iframeRef.current.setAttribute('height', height);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"video\">\r\n            <div className=\"video__title\">\r\n                <h2>{item.name}</h2>\r\n            </div>\r\n            <iframe\r\n                src={`https://www.youtube.com/embed/${item.key}`}\r\n                ref={iframeRef}\r\n                width=\"100%\"\r\n                title=\"video\"\r\n            ></iframe>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport tmdbApi  from \"../../api/tmdbApi\";\r\nimport apiConfig from \"../../api/apiConfig\";\r\n\r\nimport CastList from \"./CastList\";\r\nimport MovieList from \"../../components/movie-list/MovieList\";\r\nimport './detail.scss';\r\nimport VideoList from \"./VideoList\";\r\n\r\nconst Detail = () => {\r\n    \r\n    const {category,id}  = useParams();\r\n\r\n    const [item,setItem] = useState(null);\r\n    \r\n    useEffect(()=> {\r\n\r\n        const getDetaiil = async () => {\r\n            const response = await tmdbApi.detail(category,id, {params : {}})\r\n            setItem(response);\r\n            window.scrollTo(0,0);\r\n        }\r\n        getDetaiil();\r\n\r\n    }, [category,id])\r\n    \r\n    return (\r\n        <>\r\n            {\r\n                 item  && (\r\n                    <>\r\n                        <div className = \"banner\" style = {{backgroundImage: `url(${apiConfig.originalImage(\r\n                        item.backdrop_path || item.poster_path)})`}}></div>\r\n                        <div className=\"mb-3 movie-content container\">\r\n                            <div className=\"movie-content__poster\">\r\n                                <div className = \"movie-content__poster__img\" style = {{backgroundImage: `url(${apiConfig.originalImage(\r\n                                item.backdrop_path || item.poster_path)})`}}></div>\r\n                            </div>\r\n                            <div className=\"movie-content__info\">\r\n                                <h1 className=\"title\">\r\n                                    {item.title || item.name}\r\n                                </h1>\r\n                                <div className=\"genres\">\r\n                                    {\r\n                                        \r\n                                        item.genres && item.genres.slice(0, 5).map((genre, i) => (\r\n                                                <span key={i} className=\"genres__item\">{genre.name}</span>\r\n                                        ))\r\n                            \r\n                                    }\r\n                                </div>\r\n                                <p className = \"overview\">{item.overview}</p>\r\n                                <div className=\"cast\">\r\n                                    <div className=\"section__header\">\r\n                                        <h2>Casts</h2>\r\n                                    </div>\r\n                                    <CastList id = {item.id}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container\">\r\n                            <div className=\"section mb-3\">\r\n                                <VideoList id = {item.id}/>\r\n                            </div>\r\n                            <div className = \"section mb-3\">\r\n                                <div className=\"section__header mb-2\">\r\n                                    <h2>Similar</h2>\r\n                                </div>\r\n                                <MovieList category = {category} type = \"similar\" id = {item.id}/>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                 )\r\n             }\r\n        </>\r\n    )\r\n}\r\nexport default Detail;","import React from \"react\";\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Home from '../pages/Home'\r\nimport Catalog from \"../pages/Catalog\";\r\nimport Detail from '../pages/detail/Detail';\r\n\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route\r\n                path = '/:category/search/:keyword'\r\n                component = {Catalog}\r\n            />\r\n            <Route\r\n                path = '/:category/:id'\r\n                component = {Detail}\r\n            />\r\n            <Route\r\n                \r\n                path = '/:category'\r\n                component = {Catalog}\r\n            />\r\n            <Route\r\n                path = '/'\r\n                exact\r\n                component = {Home}\r\n            />\r\n            <Route component = {Home}/>\r\n        </Switch>\r\n    );\r\n}\r\nexport default Routes;","import './App.scss';\nimport 'swiper/swiper.min.css';\nimport './assets/boxicons-2.0.7/css/boxicons.min.css';\n\nimport {BrowserRouter, Route} from 'react-router-dom'\n\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\n\nimport Routes from './Config/Routes';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route render = {props => (\n        <> \n        <Header {...props}/>\n        <Routes/>\n        <Footer/>\n     </>\n      )}></Route>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}